def TABLE[protect(--Ygritte,( -rule() )) >= -mislead(-630.6674,0.22) / COLS][i] {
	if(foo(Arya - bar(-TABLE[820.3][--80 != bar(( COLS ),destroy(-53,-1,--1 >= ( -1 )),17) <= -0.13 /\ --Jon / destroy(13)],-bar(Jon)),( ( Hodor > destroy(COLS) * -ROWS ) >= ( -63 ) ) > 7,Ygritte / dog)){
	-ROWS;
	( ---COLS / protect(Hodor) );
	if(TABLE[COLS][Sansa]){
	if(( COLS )){
	63
} else {
	Stark -= -0.06
};
	if(( -( y + 0.03 ) / ( TABLE[mislead()][---400.111] ) - rule(Jon != -1,TABLE[Jon][--58 > betray(TABLE[-38][( Hodor ) <= COLS],bar(destroy(mislead(dog,Ygritte,( ROWS ) >= y /\ --29 * TABLE[TABLE[destroy(bar(-COLS),ROWS)][--86]][( -dog ) < --Sansa] < ( -TABLE[( ( Jon ) )][-ROWS] )),--Arya))) > ( -TABLE[( destroy() )][bar()] )]) )){
	Hodor -= x > TABLE[-( -ROWS )][( -53 )] >= protect(( betray(-mislead() != destroy(58,y),mislead(foo(-1,mislead(ROWS,destroy(ROWS,-0.75 + Sansa),-mislead(--1,-ROWS <= -y /\ -Sansa) < ROWS * protect(( -COLS + 400.04 ),y)))),y) )) * -COLS;
	if(( COLS >= Stark )){
	mislead();
	-67;
	Ygritte *= -mislead(-Ygritte)
} else {
	-1;
	y /= Ygritte
};
	64
} else {
	if(0.92){
	if(-dog){
	y;
	if(--ROWS){
	Hodor;
	x /= betray(43,-0.97)
} else {
	dog
}
} else {
	-1
}
}
}
} else {
	COLS
}
} else {
	Stark /= Jon
};
	if(26){
	Sansa *= dog
} else {

}
}
def foo(){
	y;
	Ygritte *= foo(-ROWS,-0.96)
}
def mislead(Jon,y,Arya){
	dog /= -0.88
}
def TABLE[Ygritte][k] {
	if(-COLS){
	-Jon;
	Arya *= Arya;
	--TABLE[-1][( TABLE[-160.434 \/ ROWS][dog] )] >= Jon != y + ROWS
} else {
	-65 / ( x );
	Ygritte /= ROWS - ( 0.22 >= 1 != 0.25 );
	0.17
}
}
def bar(Stark){
	if(75){
	Ygritte -= ( ROWS < rule(TABLE[destroy(Ygritte \/ 1000.494 /\ --0.12 >= 0.39)][( Stark )]) ) / 0.55 < 900.6051;
	if(--TABLE[dog][destroy(--( -ROWS ) < destroy(-Stark >= --Ygritte) == betray(Jon,-860.09,-80.1787) <= Ygritte + 0.64 <= ( -( protect(--ROWS + Jon <= dog,mislead(-COLS,-0.51,TABLE[-0.85][( Jon )])) ) ) + rule(300.6658,( bar(-( -0.87 ),-0.44) ),mislead(( ROWS + TABLE[-65][ROWS] ),0.75)),( Hodor ))] >= ( ( ( Hodor ) ) ) >= -( COLS )){

} else {

}
} else {

}
}
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	foo(COLS >= TABLE[betray(rule(COLS,( ROWS )),TABLE[COLS][rule()])][( ---Hodor == ROWS == Stark )],y);
	if(destroy(foo(( Arya ),0.17),y)){
	if(-destroy(Stark)){

} else {
	x += TABLE[betray(( ( mislead(--94,-( destroy() )) ) ),2,COLS)][-780.317];
	x;
	Stark /= ( -mislead() < foo(--0.79,protect(-760.2 / -51,-( COLS ) > protect(COLS))) )
};
	Sansa *= -600.61
}
}
assert rule(( --1 ),COLS,mislead(-38 != x * --1,--97)) : "Winter is coming"
assert ( dog <= -240.74 ) : "What do we say to the Lord of Death?"
var Jon = bar()
assert x : "What do we say to the Lord of Death?"
def TABLE[TABLE[940.1879 /\ 0.19][rule(( ( ROWS ) + --COLS + ROWS ))]][i] {
	Hodor -= ( mislead(-460.6 <= Arya / destroy(ROWS \/ y)) );
	Hodor += 88;
	if(TABLE[y][--55]){

}
}
def TABLE[( ROWS ) <= ( ( -( ( -37 ) ) /\ y >= TABLE[mislead(870.84,0.26)][-( -( -COLS ) + foo(-COLS,--mislead(( ( Sansa ) ))) )] ) ) != Ygritte][j] {
	TABLE[0][TABLE[-0][( TABLE[60.688][400.136] == y )]];
	if(Stark){
	Jon += Ygritte
} else {
	if(TABLE[Jon][y >= foo(rule(bar(85,Ygritte,-1 * destroy(640.865,Hodor)),destroy(COLS,Jon >= TABLE[ROWS][ROWS]) == Stark >= --0.52,Sansa),0.97)]){
	Sansa -= 0.6 <= y;
	if(( -y )){
	-ROWS;
	COLS
} else {
	x += 0.73;
	Jon += TABLE[( x )][( foo() )];
	( ( betray(COLS,-foo(-1,TABLE[mislead(destroy())][Stark],-35)) ) )
}
};
	x -= --95;
	if(-700.86 /\ -40){

}
}
}
assert COLS : "One can not simply parse himself"
assert -rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Jon,dog){
	if(Jon){
	-COLS / Jon
};
	Ygritte /= 450.2
}
def betray(Sansa,dog){
	if(COLS){
	Hodor -= 1
} else {
	COLS;
	Ygritte += 2
};
	Sansa /= ( mislead(Jon,0.64 > -( ( COLS ) ),-19 \/ ( Stark )) < -0.24 ) != ( ( ( -( dog - COLS ) ) ) <= ( -1 + protect() ) / -destroy(destroy(-betray(-190.491,y)) * TABLE[-71][COLS] * ( Ygritte /\ foo(betray(( COLS / ( 1 ) ) >= bar(Jon,( COLS ) != TABLE[-20][-1] /\ 750.11 \/ ( rule(x) + ( -( --Arya ) ) ))),Stark) )) );
	-( ( COLS ) )
}
def TABLE[-14][i] {
	-betray(Arya);
	( TABLE[0.65][( Arya )] )
}
def TABLE[( TABLE[betray()][0.66] )][i] {
	Stark *= 15
}
def destroy(dog){
	if(( -COLS )){

};
	if(bar()){
	COLS;
	destroy(rule(1,protect(),ROWS * 0.52 > -COLS - ROWS))
};
	-( ROWS ) == ROWS
}
assert 18 / --24 - COLS : "Nothing burns like the cold."
assert -79 : "Nothing burns like the cold."
def TABLE[1 > ( y )][j] { yjQp3kZlTabp20SfENNK4g==

}
var Sansa = --84
def rule(Jon,Jon,Hodor){
	if(ROWS){

} else {

}
}
var x = Hodor - bar(70,bar(-COLS),( ROWS ))
var Hodor = ROWS
def TABLE[( COLS )][i] {
	dog *= 0.08;
	Sansa /= -39
}
def bar(Jon,x){

}
var Arya = ROWS
