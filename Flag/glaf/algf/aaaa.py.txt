def TABLE[foo(( ( -770.38 ) ) / -0.36)][j] {

}
def TABLE[mislead(-mislead(),TABLE[( COLS + Jon )][TABLE[( --Arya * ( Ygritte ) )][foo(1,protect(bar(-970.22,-( destroy(COLS,Sansa,Stark - 66) ) * ( Jon ))) - ( rule(Sansa,( ( -Jon ) )) ))]])][k] {
	dog;
	if(COLS){
	Stark /= -x
}
}
def TABLE[-mislead()][k] {
	( TABLE[y][-0.56] );
	-21;
	if(( bar(( ( --50 * ( -Jon ) ) )) )){
	-dog;
	Hodor /= 0.46
}
}
def betray(Hodor,Hodor){
	dog /= mislead(Sansa,--1);
	if(x + --( ( Ygritte / ( Sansa ) / Sansa * bar(TABLE[-TABLE[Stark][-840.9263]][rule(foo(betray(Jon,ROWS,-( 29 )) - ( Hodor ) - COLS / -0.71 - foo(-x,Arya) / ( Hodor ) * --980.45,x),( Arya ))],( 60.39 )) ) ) / betray(( ( -110.427 ) ) - ( Jon ),x)){
	if(ROWS){
	if(-COLS){
	Hodor += destroy(bar(protect(Jon),1),-mislead(( rule(-Sansa,-destroy(( Sansa ))) ),TABLE[Hodor][( ROWS )]));
	if(0.43){
	if(( 8 )){
	x
};
	Stark /= -rule(--( ROWS ),x * Hodor)
} else {
	67;
	if(foo()){

};
	Arya += ( ( ( --550.6502 ) ) )
};
	Stark /= ROWS
} else {
	( -57 ) - Hodor
};
	-0.24
} else {
	-dog;
	if(ROWS){
	Jon *= Arya
}
}
} else {
	if(ROWS){
	ROWS;
	if(protect(( 0.6 ))){

} else {
	Ygritte /= ( destroy(-bar(Arya),ROWS) ) + TABLE[( ( COLS ) )][foo()] + ROWS;
	if(TABLE[COLS][25]){
	ROWS;
	TABLE[TABLE[1][-destroy(1 + ( ROWS ))]][mislead()]
} else {
	if(COLS){
	Stark -= ( ROWS )
}
}
}
} else {
	if(destroy() + ( ( 0.45 ) + ROWS )){
	if(Jon){

};
	1;
	Arya
}
}
}
}
def mislead(Stark){
	--( ( -( Arya - destroy(Jon,( ( -1 ) )) ) ) );
	0.53
}
def TABLE[260.8][j] {
	Stark += 0.3;
	41 + -93
}
def TABLE[protect(90,-( TABLE[--( protect(-94,0.44,0.95) )][destroy(ROWS / Arya,( 1 * -Stark ),( ROWS ))] ) + Ygritte / bar(-Arya) * ROWS)][i] {
	--TABLE[dog][Jon] - 98;
	Jon -= 930.59;
	--17 * Sansa
}
def rule(Jon){
	if(830.793 / COLS + ( ( ----Hodor / protect(Sansa,protect(Arya)) * mislead(-Jon) ) )){
	if(( ( destroy(Arya,destroy(Stark,Stark)) ) )){
	if(mislead(-0.1 + y + -0.69 - destroy(),COLS)){
	if(Ygritte){
	if(75 - Jon){
	if(-78){
	TABLE[Jon][1]
} else {
	-0.89
}
} else {
	COLS;
	x /= -ROWS - ( --19 * 420 / -COLS - ( TABLE[-0.19][-Stark] ) * Stark ) * ( -TABLE[TABLE[Stark][-( 42 )]][Jon] + -1 - y );
	COLS
}
};
	Ygritte /= Ygritte;
	Ygritte *= -Arya
} else {
	if(-( Arya ) - COLS){
	x *= ( -0.25 + -Hodor );
	Arya -= ( -0.12 );
	Arya -= -1
};
	-destroy(TABLE[ROWS][-970.86],Hodor)
};
	if(Arya){

} else {
	COLS * ( foo(betray(-0.68,TABLE[1 / -1][ROWS] / COLS),-foo()) );
	Jon -= Jon;
	Sansa *= -20
}
} else {

};
	if(0.25 - -61 * COLS + --22 / TABLE[53][( COLS )] * Sansa){
	if(x){

} else {
	if(---x - betray(-x,bar(ROWS,y),Jon)){
	Jon += 39
} else {
	Jon += mislead(15)
};
	Stark *= 55
};
	Stark += -1
} else {
	if(Jon){
	Stark -= --( ( ROWS ) ) * protect() / 680.95 - 51;
	-( ( ( ( bar(( betray(-0.7,-rule(),0) )) ) / Ygritte - Sansa ) ) ) / foo(-1,mislead(),ROWS)
}
}
};
	if(dog){
	if(-610.3 * foo(destroy(Jon,( mislead(mislead(17 * -foo(ROWS,COLS))) )),betray(COLS))){
	( betray(COLS,-( 0.77 )) )
};
	if(Stark){

}
} else {
	if(--12 - ( ( destroy(bar(betray(protect(( -( -0.46 ) ),bar(-71))),destroy(ROWS) - TABLE[Sansa][ROWS] - protect() / ( Sansa ),ROWS * TABLE[-betray(mislead(-0.67) / 0.57 + -protect(( ( COLS ) )) - --0.09,rule(protect(Jon,1,y)),COLS / TABLE[( 1 )][bar(Jon,bar(COLS))])][-430.2449] - betray(Ygritte,33,-y) - -destroy(5 + ( x ) * COLS) + Sansa)) ) )){
	Jon *= -37
};
	-1;
	if(mislead() - -destroy(Ygritte)){
	x += foo(( protect(TABLE[ROWS][x] - ROWS) / TABLE[-900.828][-( -0.07 ) / -Sansa] ),TABLE[( ( -TABLE[( rule(dog + destroy(Sansa,protect()),protect(42,Stark,protect(-460.306,COLS,( protect(foo(---72)) ))) * TABLE[foo(-TABLE[protect(-1) - destroy(( betray(protect() + mislead(( COLS ) + ( bar(-77,0.7 * -13) )),( TABLE[x][COLS / -36 * rule(51) * ( --dog )] )) ))][rule(( -1 ) * protect(dog))])][( betray(bar(( -0.91 ),COLS),mislead(( -94 )),COLS) * -320.7 / x )] + protect(60),-Arya * TABLE[TABLE[TABLE[Hodor][Stark]][11] * -1][ROWS * Stark]) ) - y * -0.02][-( ( Sansa ) )] ) ) - ROWS + destroy(-1)][y] / ROWS);
	x /= -foo();
	Arya += TABLE[-COLS][COLS]
} else {
	if(COLS + -0.3){
	if(( COLS )){
	if(Stark){
	if(TABLE[Arya][( -betray(( rule(bar(y / -0.56,x,( ( TABLE[-58][x * ( protect(-1) )] ) - 830.83 / -( --91 * ( 59 ) ) ))) ),COLS) )]){
	if(betray(x,COLS)){
	if(mislead(-1,92 * Stark,y)){
	x -= ( Jon )
};
	TABLE[-ROWS][--foo(( 1 ),Arya)]
} else {
	if(-0.19 + -Stark){
	dog *= ROWS - ( Ygritte );
	if(y){
	if(y){
	( Stark );
	--betray();
	-760.26
} else {
	y -= Stark;
	bar(ROWS,mislead(ROWS,-ROWS))
};
	TABLE[40][Jon]
}
};
	if(-mislead(y) / ( Arya )){
	if(ROWS){
	if(0.92){
	if(Jon / ---Ygritte * ROWS){
	if(-( -1 )){
	if(Arya){

} else {
	if(betray(rule(),x,TABLE[-destroy(-TABLE[protect()][COLS]) / -1 / x + ( foo(-( ( -Sansa ) ),foo(( 26 ),COLS)) )][COLS])){
	--1 / ROWS;
	Hodor *= Jon
};
	if(( TABLE[TABLE[COLS][1]][( -0.75 )] / Arya )){

} else {
	-( -Arya );
	Hodor *= Arya
}
};
	Jon /= destroy(Ygritte,ROWS) * --destroy(-0.65) / ( ( ROWS ) )
}
} else {
	( --Jon );
	Hodor += TABLE[36][( -TABLE[Stark][--25] )]
}
} else {
	x *= Hodor;
	Hodor /= Hodor;
	y *= Arya
};
	Jon
};
	if(( 1 )){
	( Sansa );
	Sansa
} else {
	Sansa += -0.71;
	dog -= destroy(( -0.32 ))
};
	if(mislead(mislead(TABLE[850.3][foo(( x + mislead(Arya) + -( -rule(COLS) + ( mislead(( TABLE[-Jon][( rule(-27 / ( -39 ),x * 0.45 - COLS - Stark) )] )) ) ) + -41 / ( ( -y ) ) ))] - Ygritte,( ( ROWS ) / Ygritte )))){
	if(-y){

}
}
} else {
	Arya;
	y += betray(TABLE[-TABLE[81 - TABLE[TABLE[1][---mislead()]][Arya]][-1] + TABLE[-0.65][protect(( foo(TABLE[( -rule(-ROWS,19 / -y * bar(( ROWS ),-28)) ) - ROWS][destroy(( -0.13 ))],ROWS) ),( -71 ),( ( -7 / 17 - ( --1 - COLS ) ) / dog ))] - 96][( ( -33 ) )],Stark / --ROWS - foo(Jon,( ---0.41 * Stark ),COLS),TABLE[Stark][-280.36] + ( ---TABLE[( foo(dog) )][bar(-0.57)] ) * -0.35) - -( 320.429 ) * ROWS - -46 / rule(--rule(destroy(( 65 ),( -protect(-0.71 * ( protect(ROWS) ),-COLS * 160.09) )),Sansa - x,-( -y ) + ROWS),COLS,COLS)
}
}
} else {

};
	bar() / ROWS
};
	if(Arya){
	0.71
} else {

};
	if(( dog )){
	x -= --1 - Arya;
	Jon *= protect();
	if(--0.83){
	if(-bar(ROWS,mislead(( destroy(( -560.3307 )) ),ROWS,( ROWS )),-mislead(ROWS) - rule(Arya,Hodor))){
	Ygritte /= -0.01
};
	Sansa += ( -TABLE[COLS][ROWS] )
}
}
} else {

}
} else {
	if(COLS){
	if(-Sansa){
	if(-( Ygritte ) / foo(-TABLE[bar() * -y / x][-Arya])){
	Arya += destroy(-0.93,( destroy(--1 + dog - --46) ),ROWS) - TABLE[-Ygritte + Ygritte][foo(Hodor,TABLE[foo(TABLE[protect(Sansa,( 5 ))][ROWS * COLS / 97],COLS + ( Jon ))][-ROWS])] + --bar(1)
}
};
	Sansa -= 0.45 + ---27 - TABLE[TABLE[Jon][protect(-Jon,ROWS)]][Jon] * ROWS / 0.3
} else {

}
};
	Arya *= --84 - Sansa
}
};
	Sansa -= Sansa / ( 79 )
}
def rule(Ygritte){
	Arya *= ( ( -rule(foo(86),-( Jon ) * --COLS) - rule(protect(ROWS,( betray() )),TABLE[( -0.35 * y )][TABLE[Stark][( bar(( -0.45 ),bar(protect() + rule(rule(--62 + --( Sansa * ROWS ),ROWS / Stark + Arya),50) + Hodor + --0.75,0.6),y) )]]) ) ) - bar(-bar() / ( -38 ));
	-69;
	if(TABLE[--dog - --90.887][dog]){
	COLS;
	if(dog){
	Stark += betray(( -mislead() + -60 ) - ( Hodor - --bar(-TABLE[-bar(COLS,Arya / -( protect(dog + COLS / 55 / ( mislead(( -Ygritte )) )) * -betray(-0.34) ))][Stark]) ) - mislead(--protect(570.02,Hodor)) * -70);
	if(Hodor){
	Sansa -= betray(-14,0.35)
}
} else {

}
}
}
def foo(Hodor){
	Jon += ROWS - mislead();
	dog /= ( --24 + ROWS )
}
def betray(Stark,Hodor){
	if(TABLE[-230.4236 * ( 88 )][( -82 ) - bar() / y + COLS + rule(-0.34 - protect())]){
	if(COLS / Jon){
	dog /= betray(COLS) + ( COLS );
	dog -= -( COLS );
	COLS
} else {
	dog += ROWS;
	foo()
}
} else {
	if(ROWS){

} else {
	if(-y){

} else {
	if(---Sansa){
	45;
	TABLE[TABLE[-1][-TABLE[-70.11][( -( Stark ) )] / foo(-0.68 * ( -71 ),( -Ygritte ))]][TABLE[TABLE[Ygritte][-foo(-75 + rule(( --ROWS )) - TABLE[Arya + -ROWS][-y * 0.57] / 960.737)]][( ( dog ) / bar(( 88 ),-96) )]];
	dog /= ( --93 - -x )
};
	dog -= Sansa
}
};
	if(protect(mislead(rule() + protect(),Ygritte))){
	Jon += Stark
}
}
}
def TABLE[( x )][k] {
	-530.45;
	if(Arya){
	Sansa *= TABLE[Hodor][( Arya * -betray(TABLE[-ROWS][Sansa],ROWS) )]
}
}
var Stark = COLS
def TABLE[bar(43,-dog)][i] {
	if(1 - ( Ygritte )){
	Jon += 83;
	y /= foo(ROWS,( 0.12 ) + ( --0.44 ) + ROWS) - rule(y,( Sansa )) * -rule(Arya + -44 / -1,( Sansa ))
};
	( 15 )
}
assert protect(( Hodor )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){

}
def destroy(Hodor){

}
var dog = --( COLS )
assert -46 : "Winter is coming"
assert COLS : "One can not simply parse himself"
def TABLE[Ygritte][i] {
	if(( rule(1) * -64 + 25 + TABLE[( COLS )][protect(-( Ygritte ))] - ROWS ) / ----x - COLS / dog + 35){
	if(foo()){
	0.18;
	Arya /= -bar(COLS,ROWS - Jon);
	( ( Sansa ) )
};
	Sansa -= Hodor
}
}
def TABLE[protect(-destroy(COLS * 340.119),destroy(betray(),-( 13 ) * Hodor)) - mislead(COLS + ( x ) + 55 - -TABLE[Arya - ( Jon / protect(bar(TABLE[Sansa][1],y),dog) ) * -TABLE[-Sansa][-0.22 / protect(( -0.17 ),Jon) - protect() + TABLE[Hodor][Hodor] / -destroy(COLS) * -Sansa - ROWS]][Jon],0.67)][k] {
	if(rule(rule(COLS,TABLE[destroy(( -0.22 ),ROWS,TABLE[Sansa][( Jon )])][rule()]),( ( bar(( -Hodor ),( bar() )) ) - Ygritte ))){
	if(-0.78){
	if(-1){
	Arya;
	-58
};
	Stark += bar(Sansa,Hodor)
} else {
	Stark += -37;
	COLS;
	-y
};
	if(-1){
	Sansa += -ROWS
}
};
	dog += ( ( mislead(ROWS) ) ) + protect(-22 / foo(),destroy(foo(( foo(dog,ROWS,bar(-0.57,foo(betray(-0.65,Jon),-16))) ),( bar(-( ( ROWS ) ),( -mislead(-Hodor) )) ))))
}
var Arya = Arya
def TABLE[betray(COLS,( TABLE[COLS][COLS] )) / x][i] {
	Arya /= ROWS
}
