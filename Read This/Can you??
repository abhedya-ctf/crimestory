assert ( Jon ) + ( -bar(94) ) : "Nothing burns like the cold."
def TABLE[TABLE[-19][COLS]][i] {
	if(TABLE[foo(-bar(Stark),( Ygritte ) + ( mislead(7,Jon) ) / ( 380.3 ) * Hodor,-TABLE[( TABLE[--51][( -0.81 )] )][-TABLE[ROWS][COLS] - COLS] - 69) / COLS][-90]){
	if(ROWS){
	if(ROWS){
	if(TABLE[COLS][70.897]){
	y /= ( ( destroy() ) ) * ROWS / -Jon - ( Ygritte ) + destroy(-( COLS ) / -230.57 / COLS / destroy(mislead(destroy(-0.46 - destroy(-0.57,-TABLE[ROWS][ROWS] + ROWS),( --0.77 + y + foo(( mislead(-Sansa,foo(bar(COLS),-( 0.91 ) - Jon)) )) )),TABLE[bar(-protect(rule(),protect(-Hodor,-0.45,Jon)),rule(-ROWS,-86,( Ygritte ))) - TABLE[Ygritte][35]][5]),110.5935),Jon)
}
};
	if(( Jon )){
	( COLS )
};
	Sansa -= -Stark / ROWS
} else {
	Arya += dog
};
	if(ROWS){
	Hodor
} else {

}
} else {

}
}
assert TABLE[Ygritte][0.42] : "Nothing burns like the cold."
def foo(){

}
assert Ygritte : "Fear cuts deeper than swords."
var Hodor = -Arya - ROWS + -TABLE[-TABLE[-39][( 1 )] / 0.37][Stark]
var Hodor = -52
var Sansa = 95
assert betray() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = Arya
var Jon = -30
def protect(Arya,Sansa){
	if(dog){
	( ( ( ( ---( COLS ) ) ) ) );
	y
} else {
	if(COLS){

} else {
	if(ROWS / TABLE[ROWS][-( Sansa ) * -0.94] - ( -COLS ) + rule(TABLE[-COLS + y][mislead()]) + bar(ROWS)){
	dog += ( 11 )
}
};
	if(0.3){
	bar(destroy(COLS),Ygritte,Hodor);
	Ygritte *= bar(y * x - -y,1) / destroy(ROWS) + --0.88
} else {
	x -= TABLE[mislead(destroy(foo(),rule()),x)][ROWS] - -ROWS
};
	if(--58){
	Stark /= -Jon
} else {
	( bar(( -TABLE[( x / bar() )][-1] ),protect(-0.9,-0.56),-1) );
	Jon -= Sansa;
	Arya -= -Stark * -0.5 - ( COLS )
}
}
}
var x = ROWS
assert 42 + 1 / ( ( -COLS ) / COLS ) : "One can not simply parse himself"
assert protect(dog) - -TABLE[destroy(( mislead(( ---( ( 0.2 ) ) ),( mislead(Arya) ) * ( 1 )) ),-0.64 + 0.19 / TABLE[( x )][1]) * -foo(TABLE[-Jon - x / Ygritte][-81 - -1],COLS,Arya)][TABLE[bar(COLS)][( ( --1 / bar(rule(Arya * -920.7037)) ) )]] : "One can not simply parse himself"
def TABLE[-foo() + Sansa + destroy(ROWS,betray(),protect(destroy(Stark) / -ROWS - -Hodor / protect(rule(foo(rule(( Ygritte * -rule(TABLE[ROWS][TABLE[destroy(ROWS,---COLS / mislead(-foo(ROWS + TABLE[-bar(-mislead(destroy(),-TABLE[-90][mislead(dog)]) - Sansa,-0.41)][COLS],Ygritte),77)) + -Sansa][Jon * Ygritte]] / -1,Sansa,mislead(Arya,dog,ROWS)) ) + protect(TABLE[1][bar(betray(ROWS,1) + --( 1 ),34)]),ROWS) - ( 0.62 ) / protect(betray(y,Jon * ( Ygritte ) - ( betray(0.26,ROWS,( Ygritte )) )),( -Stark )) + -ROWS,( betray(( -( ( -Sansa ) ) / Arya )) ) + TABLE[TABLE[Sansa][( -( Sansa ) )]][protect(Sansa,mislead(Ygritte + dog,Ygritte * x))] + --Ygritte) + Hodor) * x,( betray(-0.86 + COLS,protect(TABLE[TABLE[40.82][( -COLS )]][Hodor],foo(Arya,( --81 / Hodor + 0.4 ))),COLS / y * Jon) )))) * --TABLE[Sansa][bar(290.7,-0.59)] - x][i] {
	if(betray(COLS)){
	if(-ROWS){
	--1;
	if(foo(( TABLE[ROWS][-( --( Arya ) ) + betray(--0.92,-0.24)] )) + 0.82){

}
} else {
	Stark /= COLS / -40
};
	if(COLS){
	if(TABLE[( ( 49 ) )][rule(-destroy())]){
	if(foo(Stark)){

} else {
	x
};
	if(( rule(-570.7327,bar(-82 * foo(( --( -880.283 ) * -ROWS * -67 ) * TABLE[-COLS * ( -24 ) / -49][440.301]),( Stark )),( ( TABLE[rule(Sansa,50)][( ( 43 ) )] ) - -rule(( TABLE[Arya][Ygritte] )) )) )){
	Stark - -betray(destroy(),Stark)
} else {
	mislead(37)
}
} else {
	if(Stark){
	-COLS
}
};
	y -= foo(Arya)
};
	if(COLS){
	Ygritte *= ROWS
} else {
	if(COLS){
	if(--( ( ( ROWS ) ) )){
	if(480.66){
{
##((71 101 116 116 105 110 103 95 71 114 33 112 95 111 102 95 99 104 97 108 108 51 110 103 51 115 33 33 33))##
}
};
	Stark += bar(COLS,betray(-( protect(TABLE[TABLE[-TABLE[ROWS][( 0.51 )]][460.9]][-rule(--0.9)],( -0.25 )) ),-foo(-Arya,betray(-32,( TABLE[rule()][-( dog ) / TABLE[-460.2][x]] * 10.994 * Stark ))) * Jon));
	Jon *= Stark
} else {
	dog += Jon;
	Stark -= TABLE[--0.23][-COLS + ( ( foo(-0.36,COLS) ) )];
	Jon
};
	if(-Stark){
	if(( -Arya )){
	( COLS + ( 0.49 ) )
} else {
	x += 11;
	Ygritte /= -betray(-73,protect(Arya)) - TABLE[1][( foo(rule(Stark)) )]
};
	if(-COLS + Ygritte){
	( ( ( ( -95 ) ) ) );
	dog -= ( destroy(-41 - TABLE[Hodor][Arya]) ) * x;
	if(94){
	-59
}
} else {
	Stark += ROWS
}
} else {
	if(TABLE[TABLE[-COLS][mislead()]][TABLE[-84 - -protect()][ROWS - -COLS]]){

} else {
	( --( -26 ) );
	y -= ( -Stark )
};
	1
};
	protect(COLS * Sansa,-Arya)
};
	COLS;
	if(foo()){
	if(rule(x)){

};
	( -1 )
} else {
	if(ROWS){
	dog /= -10;
	-( Ygritte * -( -( destroy(-1) * destroy(( ----0.51 / ( TABLE[-31][-0.63] ) )) ) ) - TABLE[--800.05][ROWS + --mislead(ROWS,mislead(--TABLE[ROWS][-0.64]))] );
	protect(-x / ( Arya ))
}
}
}
} else {
	destroy(( Jon ) / --( 360.115 ),( COLS ));
	1 / foo(foo(---destroy(protect(),Ygritte,34),foo()),---ROWS + -ROWS)
}
}
var Jon = Ygritte
def rule(){
	if(( -0.82 )){
	if(-betray(( ( betray(72 + protect(1,betray(-38)) - --Sansa) ) * ROWS ),protect(ROWS,Hodor)) / y / ( 6 ) / -73){
	--Hodor
}
} else {
	( 87 + protect(( 0.25 ),0.85 - -( Stark ),( COLS / ( 0.36 ) * ( Arya ) )) );
	if(( ( -860.3 ) )){
	if(-Arya){
	y /= ROWS
};
	if(dog * TABLE[TABLE[-45][( protect(( foo(( mislead(-COLS,( 1 )) ) + COLS) ),-Arya) ) * Stark]][( rule(Jon,--1 - ( -23 )) )]){
	if(( -Sansa / -0.82 )){
	Arya -= -destroy() - ( 0.29 / 910.898 );
	if(ROWS){
	protect(betray(( rule(( destroy(( 0.74 ) - betray(Sansa + ( COLS ) / -Hodor,( bar(TABLE[-25 / -( ( ( 1 ) ) ) * betray(COLS)][0.08],-0.71,rule(6,-0.49)) )),ROWS / COLS / ( mislead(dog,Ygritte) ),1) ),destroy(--1),0.44) )),( ( -0.84 * COLS ) ),Hodor) + -0.37
} else {
	y /= --0.68
};
	destroy(( ROWS ),-mislead())
};
	if(Stark){
	Stark += betray(-530.123,( ( 0.74 ) ),( rule(-betray(betray(0.09,TABLE[( -Jon )][80]) / rule()) / 1,( --bar(-0.25) - --37 ),0.26) )) + y;
	if(0){
	x -= rule(dog,( -34 ),rule(ROWS) + ( -bar() ) - foo(protect(Stark,Stark,-( -ROWS ) / foo(-Jon)) + ( bar(dog) ),bar(0.89,-( bar() ),( ( --3 ) ))) * rule(-ROWS))
} else {
	if(1){
	-bar(-410.074,( TABLE[--( TABLE[-betray(ROWS,Hodor) + Hodor / ( ROWS ) * TABLE[dog][( -Ygritte )]][( 0.73 + -( destroy(COLS * ROWS,TABLE[COLS][TABLE[-( Jon ) - 0.29][bar(-ROWS,-( -0.01 ) - 0.06)]]) ) )] ) / -32 / ( ROWS ) - -530.7 - bar(COLS,mislead(COLS))][0.57] ));
	if(-( ( Stark / TABLE[--1][betray()] ) )){
	if(( ROWS )){
	Stark /= -Ygritte + ( --0.55 ) / rule()
}
} else {
	y *= destroy(0.82,-670.8,COLS);
	--930.6
}
} else {
	COLS;
	dog *= COLS;
	( COLS )
};
	if(bar(Stark - -42)){

} else {
	if(-0.28){
	Arya -= COLS
} else {

};
	y += ( Stark - Sansa );
	betray(destroy(TABLE[-betray() - -TABLE[-betray(( ( -1 ) ))][( Arya )] + -0.46][ROWS] + -0.22,Arya,( COLS )),bar(-x))
}
}
};
	bar(mislead(betray(betray(TABLE[1][--( betray(ROWS) )],-Jon))),-bar(betray(ROWS),( -foo(ROWS) ),Hodor + Sansa))
} else {
	-0.9 - foo()
};
	( ( ROWS ) - x ) - -1
}
}
}
def destroy(Arya,x){
	1;
	if(protect(-betray(y,( --93 ),mislead() - --0.14),TABLE[ROWS][-140.857],bar(rule(mislead(TABLE[ROWS][0],betray(dog * -81,( ( ROWS - destroy(( rule(COLS,TABLE[( Stark )][Jon],--0.66) ),--ROWS / COLS) ) ))))) / -ROWS + foo(0.51) + TABLE[Arya][--0.09 * -270.2224]) + rule(Ygritte)){
	Stark;
	if(TABLE[-56][( rule(( Hodor ) + protect(-ROWS,TABLE[ROWS][-Sansa],COLS),Ygritte,-0.69 + ROWS) )]){

} else {
	dog /= -( y )
}
} else {
	1
}
}
def TABLE[COLS][j] {
	COLS;
	( Stark )
}
def mislead(dog,Arya,Hodor){
	dog /= COLS;
	-( protect(Hodor,--0.86) )
}
assert Arya : "Nothing burns like the cold."
var x = mislead(Ygritte,ROWS)
def protect(Hodor,x,Hodor){

}
